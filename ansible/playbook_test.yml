---
- name: Test Playbook
  hosts: local_servers
  any_errors_fatal: true
  become: yes

  vars:
    message1: Privet
    message2: Mir
    secret: hfrhgerggjgnnbrtnb
    mytext: "Privet"

  tasks:
  - name: Print secret
    debug:
      var: secret

  - debug:
      msg: "Secret: {{ secret }}"

  - debug:
      msg: "Owner of this server is {{ ansible_user }}"

  - set_fact: full_message="{{ message1 }} {{ message2 }} from {{ ansible_user }}"

  - debug:
      var: full_message

  - debug:
      var: ansible_os_family

  - shell: uptime
    register: results

  - debug:
      var: results.stdout

  - name: Say Hello
    debug: msg="Hello {{ item }}"
    loop:
      - "Alex"
      - "Michael"

  - name: Loop until example
    shell: echo -n X >> myfile.txt && cat myfile.txt
    register: output
    delay: 2
    retries: 10
    until: output.stdout.find("XXXX") == false

  - name: Print output
    debug:
      var: output.stdout

  - name: Ping test
    ping:

  - name: Create folders
    include: create_folders.yml

  - name: Create files
    include: create_files.yml  mytext="Hello"

  - name: Unregistred server
    shell: echo This server {{ inventory_hostname }} was deregistred, node name is {{ ansible_nodename }} >> /root/testfolder/log.txt
    delegate_to: 127.0.0.1

  - name: Update DB
    shell: echo Updating DB...
    run_once: true
    delegate_to: my_linux

  - name: Create file10
    copy:
      dest: /root/testfolder/file10.txt
      content: |
        This is FileN10
        On English Hello
        On Russian {{ mytext }}
    delegate_to: my_linux

  - name: Create file20
    copy:
      dest: /root/testfolder/file20.txt
      content: |
        This is FileN20
        On English Hello
        On Russian {{ mytext }}

  - name: Reboot servers
    shell: sleep 3 && reboot now
    async: 1
    poll: 0

  - name: Wait servers
    wait_for:
      host: "{{ inventory_hostname }}"
      state: started
      delay: 5
      timeout: 40
    delegate_to: 127.0.0.1

  - name: ErrorTask1
    apt: name=treeee state=latest
    ignore_errors: yes

  - name: ErrorTask2
    shell: echo Hello World
    register: erresults
#    failed_when: "'World' in erresults.stdout"
    failed_when: erresults.rc == 0

  - debug:
      var: erresults

#  - name: Install packages
#    apt: name={{ item }} state=installed
#    loop:
#      - python
#      - tree
#      - nginx
